services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports: 
      - "2181:2181"
    networks:
      - search-application-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5


  kafka:
    image: bitnami/kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - search-application-network
    depends_on:
      - zookeeper

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: pranshubarar
    ports:
      - "3306:3306"
    networks:
      - search-application-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  connect:
    image: confluentinc/cp-kafka-connect
    environment:
      CONNECT_CONFIG_STORAGE_TOPIC: my_connect_configs
      CONNECT_REST_PORT: 8083
      CONNECT_OFFSET_STORAGE_TOPIC: my_connect_offsets
      CONNECT_STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_GROUP_ID: 1
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
    ports:
      - "8083:8083"
    depends_on:
      kafka: 
        condition: service_healthy
      mysql: 
        condition: service_healthy
    networks:
      - search-application-network
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.3.1
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:10.0.1
        #
        echo "Launching Kafka Connect worker"
        #
        /etc/confluent/docker/run

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    ports: 
      - "9200:9200"
    environment: 
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 30s
      retries: 20
      start_period: 30s 
    networks:
      - search-application-network

  crud_application:
    image: search_optimization_application_v2:0.0.1-SNAPSHOT
    ports: 
      - "8080:8080"
    networks:
      - search-application-network
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      ELASTICSEARCH_HOST: elasticsearch
      SPRING_ELASTICSEARCH_URIS: elasticsearch:9200

networks:
  search-application-network:
    driver: bridge